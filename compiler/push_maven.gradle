// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'maven-publish'
def buildType = false
def mavenUrl = "http://" + String.valueOf(maven_address) + "/repository/globalegrow/"
def mavenUrlSnapshot = "http://" + String.valueOf(maven_address) + "/repository/globalegrow-snapshot/"
def mavenUserName = "longxl"
def mavenPwd = "longxl123"
def sdkVersionName = "1.0.0"
def sdkVersionNameSnapshot = "1.0.1-SNAPSHOT"
def pomGroupId = "com.fz.badgeview"
def pomArtifactId = "compiler"
//task androidJavadocs(type: Javadoc) {
//    options.encoding = "utf-8"
//    source = android.sourceSets.main.java.srcDirs
//    //添加classpath，解析类型
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}

////打包doc
//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    archiveClassifier = 'javadoc' //分类器，区分jar
//    from androidJavadocs.destinationDir
//}

////打包源码
//task androidSourcesJar(type: Jar) {
//    archiveClassifier = 'sources'//分类器，区分jar
//    from android.sourceSets.main.java.srcDirs
//}
//解决 JavaDoc 中文注释生成失败的问题
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

//artifacts {
//    archives androidSourcesJar
//    archives androidJavadocsJar
//}
project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                def ver = sdkVersionName
                if (buildType) {
                    ver = sdkVersionName
                }else{
                    ver = sdkVersionNameSnapshot
                }
                version ver
                artifactId pomArtifactId
                groupId pomGroupId
                from components.java
            }
        }
        repositories {
            maven {
                allowInsecureProtocol = true
                if (buildType) {
                    println "uploadArchives build release"
                    url = uri(mavenUrl)
                } else {
                    println "uploadArchives build beta"
                    url = uri(mavenUrlSnapshot)
                }
                credentials {
                    username = mavenUserName
                    password = mavenPwd
                }
            }
        }
    }
}
